@model Vanessa.Models.Usuario

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CreateOrEdit</title>
    <link rel="stylesheet" href="~/Css/Usuario2.css"> 
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <title>Gestión de Usuarios</title>
</head>
<body>

    <!-- Gráfico de hojas y ramas -->
    <a href="@Url.Action("Index", "Usuarios")" class="btn-secondary">Cancelar</a>
    <div class="Ramas"></div>
    <div class="Hojas"></div>

    <div class="container">
        <h1>Crear o Editar Usuario</h1>

        <div class="leaf-container">

        <!-- Formulario de usuario -->
        @using (Html.BeginForm("CreateOrEdit", "Usuarios", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="Nombre">Nombre</label>
                @Html.TextBoxFor(m => m.Nombre, new { placeholder = "Ingrese el nombre del usuario" })
                @Html.ValidationMessageFor(m => m.Nombre)
            </div>

            <div class="form-group">
                <label for="Documento">Documento</label>
                @Html.TextBoxFor(m => m.Documento, new { placeholder = "Ingrese el número de documento" })
                @Html.ValidationMessageFor(m => m.Documento)
            </div>

            <div class="form-group">
                <label for="Correo">Correo Electrónico</label>
                @Html.TextBoxFor(m => m.Correo, new {placeholder = "Ingrese el correo electrónico" })
                @Html.ValidationMessageFor(m => m.Correo)
            </div>

            <div class="form-group">
                <label for="Contraseña">Contraseña</label>
                @if (Model.Id == 0)  // Solo asignamos una contraseña predeterminada si es un nuevo usuario
                {
                    @Html.PasswordFor(m => m.Contraseña, new { value = "Contraseña123!", placeholder = "Ingrese la contraseña" })
                }
                else
                {
                    @Html.PasswordFor(m => m.Contraseña, new { placeholder = "Ingrese la contraseña" })
                }
                @Html.ValidationMessageFor(m => m.Contraseña)
                <span id="password-icon" class="password-icon2" onclick="togglePasswordVisibility('Contraseña')">
                    <i class="fas fa-eye"></i>
                </span>
            </div>

            <div class="form-group">
                <label for="ConfirmarContraseña">Confirmar Contraseña</label>
                @if (Model.Id == 0)  // Si es un nuevo usuario, pre-llenamos el campo con la misma contraseña predeterminada
                {
                    @Html.PasswordFor(m => m.ConfirmarContraseña, new { value = "Contraseña123!", placeholder = "Confirme la contraseña" })
                }
                else
                {
                    @Html.PasswordFor(m => m.ConfirmarContraseña, new { placeholder = "Confirme la contraseña" })
                }
                @Html.ValidationMessageFor(m => m.ConfirmarContraseña)
                <span id="confirm-password-icon" class="password-icon" onclick="togglePasswordVisibility('ConfirmarContraseña')">
                    <i class="fas fa-eye"></i>
                </span>
            </div>

            <div class="form-group">
                <label for="RolId">Rol</label>
                @Html.DropDownListFor(m => m.RolId, (SelectList)ViewData["Roles"], "Seleccione un rol")
                @Html.ValidationMessageFor(m => m.RolId)
            </div>

            <button type="submit" class="btn btn-primary">Guardar</button>
          
        }
        </div>
    </div>

    <script src="~/Js/OndaAgua.js"></script> 
    <script src="~/Js/Ojito.js"></script> 
</body>
</html>

